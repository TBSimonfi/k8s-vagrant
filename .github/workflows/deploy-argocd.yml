name: Deploy Argo CD
on:
  push:
    branches:
      - main
jobs:
  deploy:
    runs-on: self-hosted
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Deploy Ingress Controller
      run: |
        kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/cloud/deploy.yaml
        kubectl apply -f - <<EOF
        apiVersion: v1
        kind: Service
        metadata:
          name: ingress-nginx-controller
          namespace: ingress-nginx
        spec:
          type: NodePort
          ports:
            - name: http
              port: 80
              targetPort: 80
              nodePort: 32080  # Change this to any available port
            - name: https
              port: 443
              targetPort: 443
              nodePort: 32443  # Change this to any available port
          selector:
            app.kubernetes.io/name: ingress-nginx
        EOF
    - name: Wait for Ingress Controller
      run: |
        sleep 60  # Wait for the Ingress controller to be fully up and running
    - name: Get Local IP Address
      id: get-ip
      run: |
        LOCAL_IP=$(hostname -I | awk '{print $1}')
        echo "LOCAL_IP=${LOCAL_IP}" >> $GITHUB_ENV
    - name: Deploy Argo CD
      run: |
        kubectl create namespace argocd
        kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
    - name: Configure Ingress
      run: |
        cat <<EOF | kubectl apply -f -
        apiVersion: networking.k8s.io/v1
        kind: Ingress
        metadata:
          name: argocd-server-ingress
          namespace: argocd
          annotations:
            nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
            nginx.ingress.kubernetes.io/ssl-passthrough: "true"
        spec:
          ingressClassName: nginx
          rules:
            - host: '*'
              http:
                paths:
                  - path: /
                    pathType: Prefix
                    backend:
                      service:
                        name: argocd-server
                        port:
                          name: https
        EOF
